local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

local targetCF = CFrame.new(
    236.947098, 4.75381136, -177.751907,
    1, 0, 0,
    0, 1, 0,
    0, 0, 1
)
local warpDuration = 3

local farming = false
local noclipConn

-- default config
local cpDelay = 21
local summitDelay = 110
local loopDelay = 5

local function getHRP()
    local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    return char:WaitForChild("HumanoidRootPart")
end

local function smoothWarp(cf, duration)
    local hrp = getHRP()
    local tweenInfo = TweenInfo.new(duration or 2, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
    local tween = TweenService:Create(hrp, tweenInfo, {CFrame = cf})
    tween:Play()
    tween.Completed:Wait()
end

local function fireTouch(part)
    local hrp = getHRP()
    if part and part:IsA("BasePart") then
        firetouchinterest(hrp, part, 0)
        task.wait(0.1)
        firetouchinterest(hrp, part, 1)
    end
end

local function countdown(seconds, label, prefix)
    for t = seconds, 1, -1 do
        if not farming then break end
        label.Text = prefix.." ("..t.."s)"
        task.wait(1)
    end
    label.Text = prefix
end

local function triggerCheckpoint(i, cpStat, checkpointsFolder, countdownLabel)
    local cp = checkpointsFolder:FindFirstChild("Checkpoint"..i)
    if not cp then return end
    local success = false
    while not success and farming do
        local before = cpStat.Value
        fireTouch(cp)
        local timeout, t = 5, 0
        while cpStat.Value == before and t < timeout do
            task.wait(0.2)
            t += 0.2
        end
        if cpStat.Value >= i then
            success = true
        else
            task.wait(0.5)
        end
    end
    if i < 5 then
        countdown(cpDelay, countdownLabel, "Delay CP"..i.."→"..(i+1))
    else
        countdown(summitDelay, countdownLabel, "Delay CP5→Summit")
    end
end

local function triggerCheckpoints(countdownLabel)
    local leaderstats = LocalPlayer:WaitForChild("leaderstats")
    local cpStat = leaderstats:WaitForChild("Checkpoint")
    local checkpointsFolder = workspace:WaitForChild("Checkpoints")
    for i = 1, 5 do
        if cpStat.Value < i then
            triggerCheckpoint(i, cpStat, checkpointsFolder, countdownLabel)
        end
    end
end

local function triggerSummit()
    local leaderstats = LocalPlayer:WaitForChild("leaderstats")
    local summitStat = leaderstats:WaitForChild("Summit")
    local summit = workspace:FindFirstChild("SummitTrigger")
    if not summit then return false end
    local success = false
    while not success and farming do
        local before = summitStat.Value
        fireTouch(summit)
        local timeout, t = 5, 0
        while summitStat.Value == before and t < timeout do
            task.wait(0.2)
            t += 0.2
        end
        if summitStat.Value > before then
            success = true
        else
            task.wait(0.5)
        end
    end
    return success
end

local function respawnPlayer()
    task.wait(1)
    local char = LocalPlayer.Character
    if char then char:BreakJoints() end
end

local function enableNoClip()
    noclipConn = RunService.Stepped:Connect(function()
        local char = LocalPlayer.Character
        if char then
            for _, part in pairs(char:GetChildren()) do
                if part:IsA("BasePart") then part.CanCollide = false end
            end
        end
    end)
end

local function disableNoClip()
    if noclipConn then noclipConn:Disconnect() noclipConn = nil end
end

local function startFarming(updateProgress, countdownLabel)
    farming = true
    enableNoClip()
    while farming do
        smoothWarp(targetCF, warpDuration)
        task.wait(0.5)
        triggerCheckpoints(countdownLabel)
        local summitOK = triggerSummit()
        if summitOK then
            respawnPlayer()
        end
        updateProgress()
        countdown(loopDelay, countdownLabel, "Delay Loop Baru")
    end
    disableNoClip()
end

local function stopFarming()
    farming = false
    disableNoClip()
end

-- === GUI ===
local ScreenGui = Instance.new("ScreenGui", game.CoreGui)
ScreenGui.Name = "FarmingGUI"
ScreenGui.ResetOnSpawn = false

local Frame = Instance.new("Frame", ScreenGui)
Frame.Size = UDim2.new(0, 260, 0, 170)
Frame.Position = UDim2.new(0.5, -130, 0.1, 0)
Frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
Frame.Active = true
Frame.Draggable = true
Instance.new("UICorner", Frame).CornerRadius = UDim.new(0, 8)

local Button = Instance.new("TextButton", Frame)
Button.Size = UDim2.new(1, -20, 0, 30)
Button.Position = UDim2.new(0, 10, 0, 10)
Button.Text = "ENABLE"
Button.TextColor3 = Color3.fromRGB(255, 255, 255)
Button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
Button.Font = Enum.Font.GothamBold
Button.TextSize = 18
Instance.new("UICorner", Button).CornerRadius = UDim.new(0, 6)

local ProgressLabel = Instance.new("TextLabel", Frame)
ProgressLabel.Size = UDim2.new(1, -20, 0, 20)
ProgressLabel.Position = UDim2.new(0, 10, 0, 45)
ProgressLabel.Text = "CP: 0/5 | Summit: 0"
ProgressLabel.TextColor3 = Color3.fromRGB(150, 200, 255)
ProgressLabel.BackgroundTransparency = 1
ProgressLabel.Font = Enum.Font.Gotham
ProgressLabel.TextSize = 15

local CountdownLabel = Instance.new("TextLabel", Frame)
CountdownLabel.Size = UDim2.new(1, -20, 0, 20)
CountdownLabel.Position = UDim2.new(0, 10, 0, 70)
CountdownLabel.Text = "Countdown: -"
CountdownLabel.TextColor3 = Color3.fromRGB(255, 200, 150)
CountdownLabel.BackgroundTransparency = 1
CountdownLabel.Font = Enum.Font.Gotham
CountdownLabel.TextSize = 15

local CPDelayBox = Instance.new("TextBox", Frame)
CPDelayBox.Size = UDim2.new(0.3, -10, 0, 25)
CPDelayBox.Position = UDim2.new(0, 10, 0, 100)
CPDelayBox.PlaceholderText = "CP Delay"
CPDelayBox.Text = tostring(cpDelay)
CPDelayBox.TextColor3 = Color3.fromRGB(255,255,255)
CPDelayBox.BackgroundColor3 = Color3.fromRGB(40,40,40)
CPDelayBox.Font = Enum.Font.Gotham
CPDelayBox.TextSize = 14
Instance.new("UICorner", CPDelayBox).CornerRadius = UDim.new(0, 6)

local SummitDelayBox = Instance.new("TextBox", Frame)
SummitDelayBox.Size = UDim2.new(0.3, -10, 0, 25)
SummitDelayBox.Position = UDim2.new(0.35, 10, 0, 100)
SummitDelayBox.PlaceholderText = "Summit Delay"
SummitDelayBox.Text = tostring(summitDelay)
SummitDelayBox.TextColor3 = Color3.fromRGB(255,255,255)
SummitDelayBox.BackgroundColor3 = Color3.fromRGB(40,40,40)
SummitDelayBox.Font = Enum.Font.Gotham
SummitDelayBox.TextSize = 14
Instance.new("UICorner", SummitDelayBox).CornerRadius = UDim.new(0, 6)

local LoopDelayBox = Instance.new("TextBox", Frame)
LoopDelayBox.Size = UDim2.new(0.3, -10, 0, 25)
LoopDelayBox.Position = UDim2.new(0.7, 5, 0, 100)
LoopDelayBox.PlaceholderText = "Loop Delay"
LoopDelayBox.Text = tostring(loopDelay)
LoopDelayBox.TextColor3 = Color3.fromRGB(255,255,255)
LoopDelayBox.BackgroundColor3 = Color3.fromRGB(40,40,40)
LoopDelayBox.Font = Enum.Font.Gotham
LoopDelayBox.TextSize = 14
Instance.new("UICorner", LoopDelayBox).CornerRadius = UDim.new(0, 6)

local function updateProgress()
    local leaderstats = LocalPlayer:FindFirstChild("leaderstats")
    if leaderstats then
        local cp = leaderstats:FindFirstChild("Checkpoint")
        local summit = leaderstats:FindFirstChild("Summit")
        if cp and summit then
            ProgressLabel.Text = "CP: "..cp.Value.."/5 | Summit: "..summit.Value
        end
    end
end

Button.MouseButton1Click:Connect(function()
    if farming then
        stopFarming()
        Button.Text = "ENABLE"
        Button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    else
        cpDelay = tonumber(CPDelayBox.Text) or 21
        summitDelay = tonumber(SummitDelayBox.Text) or 110
        loopDelay = tonumber(LoopDelayBox.Text) or 5

        Button.Text = "DISABLE"
        Button.BackgroundColor3 = Color3.fromRGB(120, 40, 40)
        task.spawn(function()
            startFarming(updateProgress, CountdownLabel)
        end)
    end
end)

RunService.Heartbeat:Connect(function()
    if farming then updateProgress() end
end)